name: Test
on: [push, pull_request]
jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.vi }} / ${{ matrix.cp }}, ${{ matrix.dl }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11]
        v: [stable]
        vi: [vim]
        cp: [system]
        dl: [git]
    steps:
      - id: check
        if: ${{ (matrix.os == 'windows-2022' && matrix.dl == 'wget') ||
                (matrix.vi == 'vim' && contains(matrix.cp, 'link')) }}
        run: echo 'Unsupported environment'

      - name: Clone vim-jetpack
        uses: actions/checkout@v2
        if: ${{ steps.check.conclusion == 'skipped' }}

      - name: Install vim-themis
        uses: actions/checkout@v2
        if: ${{ steps.check.conclusion == 'skipped' }}
        with:
          repository: thinca/vim-themis
          path: vim-themis

      - name: Install ${{ matrix.vi }}
        uses: rhysd/action-setup-vim@v1
        if: ${{ steps.check.conclusion == 'skipped' }}
        id: vim
        with:
          version: ${{ matrix.v }}
          neovim: ${{ matrix.vi == 'neovim' }}

      - run: |-
          for f in `grep -l -r microsoft /etc/apt/`; do echo file: $f; cat $f; done

      - name: Run tests with ${{ matrix.dl }} and ${{ matrix.cp }} and ${{ matrix.v }}
        if: ${{ steps.check.conclusion == 'skipped' }}
        timeout-minutes: 5
        env:
          JETPACK_DOWNLOAD_METHOD: ${{ matrix.dl }}
          JETPACK_COPY_METHOD: ${{ matrix.cp }}
          THEMIS_VIM: ${{ steps.vim.outputs.executable }}
        run: ./vim-themis/bin/themis ./test/test.vim --target self
  post-test:
    name: All tests passed
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - run: echo ok
